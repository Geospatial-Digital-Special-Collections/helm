apiVersion: apps/v1
kind: Deployment
metadata:
  name: osgeo-{{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: osgeo-{{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app: osgeo-{{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Release.Name }}-controller
      imagePullSecrets:
        - name: docker-hub-cred 
      containers:
        - name: osgeo-postgis-{{ .Release.Name }}
          image: tibben/pg:proxy
          imagePullPolicy: {{ $.Values.pullPolicy }}
          ports:
            - containerPort: 5432
              protocol: TCP
          env:
            - name: LD_LIBRARY_PATH
              value: /usr/lib/postgresql
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgis
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgis
                  key: POSTGRES_USER
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: postgis
                  key: POSTGRES_PORT
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgis
                  key: POSTGRES_PASSWORD
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgis
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: data-pvc
              mountPath: /data
        - name: osgeo-osgeo-{{ .Release.Name }}
          image: tibben/pg:osgeo
          imagePullPolicy: {{ $.Values.pullPolicy }}
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgis
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgis
                  key: POSTGRES_USER
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: postgis
                  key: POSTGRES_PORT
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgis
                  key: POSTGRES_PASSWORD
          command: ["/bin/sh"]
          args: ["-c","tail -F /dev/null"]
          volumeMounts:
            - name: data-pvc
              mountPath: /data
            - name: collections-pvc
              mountPath: /collections
            - name: tiles-pvc
              mountPath: /tiles
        - name: osgeo-git-{{ .Release.Name }}
          image: alpine/git
          imagePullPolicy: {{ $.Values.pullPolicy }}
          command: ["/bin/sh"]
          args: ["-c","tail -F /dev/null"]
          volumeMounts:
            - name: data-pvc
              mountPath: /data
        - name: osgeo-gdsc-{{ .Release.Name }}
          image: tibben/pg:gdsc
          imagePullPolicy: {{ $.Values.pullPolicy }}
          #command: ["/bin/sh"]
          #args: ["-c","tail -F /dev/null"]
          volumeMounts:
            - name: data-pvc
              mountPath: /data
            - name: copernicus-secret
              readOnly: true
              mountPath: "/home/gdsc/copernicus"
      volumes:
        - name: data-pvc
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-data
        - name: collections-pvc
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-collections
        - name: tiles-pvc
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-tiles
        - name: copernicus-secret
          secret:
            secretName: copernicus-secret
        ##
         # see https://severalnines.com/database-blog/using-kubernetes-deploy-postgresql
         # for more ideas on volumes and stateful sets
         ##
